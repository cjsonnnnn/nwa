pipeline {
  agent { label 'agent-ansible-net' }

  options {
    skipDefaultCheckout(true)
  }

  environment {
    APP_NAME = "nwa"
    DOCKERHUB_REPO = "jpiay/${APP_NAME}"
    PI_CREDS = credentials('ssh-vm-jenkins')
  }

  stages {
    stage('Prepare Version') {
      steps {
        script {
          echo "=== Stage: Prepare Version ==="
          echo "Build Number: ${currentBuild.number}"
          currentBuild.displayName = "Release-${currentBuild.number}"
          env.APP_VERSION = "${params.IMAGE_TAG.tokenize(' ')[0]}"
          echo "APP_VERSION = ${env.APP_VERSION}"
        }
      }
    }

    stage('Approval for Production') {
      when {
        expression { params.DEPLOY_ENV == 'PROD' }
      }
      steps {
        script {
          echo "=== Stage: Approval for Production ==="
          echo "DEPLOY_ENV = ${params.DEPLOY_ENV}"
          timeout(time: 1, unit: 'HOURS') {
            input message: "Approve deployment to Production?",
                  ok: "Deploy Now", submitter: "manager"
          }
        }
      }
    }
    
    stage('Prepare SSH & Checkout Ansible Repo') {
      steps {
        echo "=== Stage: Prepare SSH & Checkout Ansible Repo ==="
        withCredentials([sshUserPrivateKey(credentialsId: 'ssh-ansible-ctrl', keyFileVariable: 'SSH_PRIVATE_KEY')]) {
          sh '''
            echo "--- Inside SSH setup ---"
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone -v -b main git@github.com:jpiay/fos-ansible.git
            cd fos-ansible
            ls -al
          '''
        }
      }
    }

    stage('Deploy to Server') {
      steps {
        echo "=== Stage: Deploy to Server ==="
        withCredentials([usernamePassword(credentialsId: 'dockerhub-jpiay',
                                          usernameVariable: 'DOCKERHUB_USER',
                                          passwordVariable: 'DOCKERHUB_PASS')]) {
          sh '''
            echo "--- Environment before ansible-playbook ---"
            ls -al
            ansible-playbook playbooks/cd/nmf/deploy.yml \
              -i inventory \
              --limit localhost \
              -e DOCKERHUB_USERNAME=${DOCKERHUB_USER} \
              -e DOCKERHUB_PASSWORD=${DOCKERHUB_PASS} \
              -e DOCKERHUB_REPO=${DOCKERHUB_REPO} \
              -e APP_NAME=${APP_NAME} \
              -e APP_VERSION=${APP_VERSION}
          '''
        }
      }
    }
  }
}
