def remote=[:]
remote.name = 'vm-lab3'
remote.host = '192.168.18.23'
remote.allowAnyHosts = true

pipeline {
  agent { label 'agent-azure-net' }

  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
    skipDefaultCheckout(true)
  }

  environment {
    APP_NAME = "nwa"
    DOCKERHUB_REPO = "jpiay/${APP_NAME}"
    PI_CREDS=credentials('ssh-vm-lab3')
  }

  stages {
    stage('Prepare Version') {
      steps {
        script {
          currentBuild.displayName = "Release-${currentBuild.number}"
          env.APP_VERSION = "${params.IMAGE_TAG.tokenize(' ')[0]}"
        }
      }
    }

    stage('Approval for Production') {
      when {
        expression { params.DEPLOY_ENV == 'PROD' }
      }
      steps {
        script {
          timeout(time: 1, unit: 'HOURS') {
            input message: "Approve deployment to Production?",
                  ok: "Deploy Now", submitter: "manager"
          }
        }
      }
    }

    stage('Deploy Docker Image to Azure') {
      steps {
        script {
          remote.user=env.PI_CREDS_USR
          remote.password=env.PI_CREDS_PSW
        }
        sshCommand(remote: remote, command: "sudo docker pull ${DOCKERHUB_REPO}:${APP_VERSION}")
        sshCommand(remote: remote, command: "sudo docker stop ${APP_NAME} || true")
        sshCommand(remote: remote, command: "sudo docker rm ${APP_NAME} || true")
        sshCommand(remote: remote, command: "sudo docker run -d --name ${APP_NAME} -p 8080:80 ${DOCKERHUB_REPO}:${APP_VERSION}")
      }
    }
  }
}
